---
title: 为Cloud Foundry设置AWS环境
owner: Release Integration
---

<style>
    .note.warning {
        background-color: #fdd;
        border-color: #fbb
    }

    .note.warning:before {
        color: #f99;
    }
</style>

<strong><%= modified_date %></strong>

本节描述如何使用`bosh aws create`为Cloud Foundry在Amazon Web Service (AWS) 上建立环境.
该命令行工具会为你的部署创建所有的structure

`bosh aws create`命令会在AWS创建许多structure.
如果该命令没有成功结束, 或你想终止该过程,
你可以用销毁命令[destroy command](#destroy-environment)清理AWS环境

<p class="note"><strong>Note</strong>:
  销毁命令会删除你的AWS帐号所有的用户所创建的structures, 包括但不限于那些用`bosh aws create`所创建的structures.
</p>

## <a id="domain-prep"></a> 准备域名 ##

1. 为你的Cloud Foundry实例选择DNS域名.
例如, 如果你选的域名是*cloud.example.com*, Cloud Foundry会将你的应用部署至`APP-NAME.cloud.example.com`.

1. 在AWS的[Route 53 dashboard](https://console.aws.amazon.com/route53)中, 点击 **Hosted zones**

1. 点击**Create Hosted Zone**按钮

1. 在**Domain Name**下, 输入上述域名, AWS会host此域名.

1. **Type**中选择**Public Hosted Zone**. 这会为你的hosted zone创建四个name server (NS)记录

1. 在你的域名注册商中, 将你的hosted zone的DNS Authority代理给上述四个Amazon Route 53 名字服务器.
你需要替换你的注册商的NS记录为你在上一步创建的NS记录的domain.

<p class='note'><strong>Note</strong>:
你还可以通过<strong>Hosted zones</strong>中选择你的域名来获得NS记录的值
</p>
<%= image_tag("aws_images/hostedzone.png") %>

## <a id="deployment-env-prep"></a> 准备部署环境 ##

1. 安装`bundler` Ruby包(gems):

    <pre class="terminal">
    $ gem install bundler
    </pre>

1. 创建 `deployments` 目录:

    <pre class="terminal">
    $ mkdir deployments
    </pre>

1. 在 `deployments` 目录内, 建立一个名为 `cf-example` 的子目录, 用来保存BOSH所需要的建立环境的ruby gems 以及配置信息:

    <pre class="terminal">
    $ cd deployments
    $ mkdir cf-example
    </pre>

1. 在`cf-example`子目录, 创建名为`Gemfile`的文件, 类似于下列内容, 但`ruby`的参数要匹配你所运行的Ruby的版本:

    ~~~
    source 'https://rubygems.org'
    ruby "2.2.2"

    gem "bosh_cli_plugin_aws"
    ~~~

1. 运行`bundle install`以安装`bosh_cli_plugin_aws`的gem包以及其依赖包
    <pre class="terminal">
    $ bundle install

    ...

    Bundle complete! 1 Gemfile dependency, 85 gems now installed.
    Use `bundle show [gemname]` to see where a bundled gem is installed.
    </pre>

1. <a id="generate-credentials"></a>
在AWS中, **User**下选择**Identity and Access Management** Dashboard, 建立一组AWS的访问密钥(access key)的帐号密码.
    * 对新用户, 点击 **Create New Users** 并输入用户名.
    * 对已存在用户, 选择用户, 选择 **Security Credentials** 选项卡, 并点击 **Create Access Key**.

1. 点击**Show User Security Credentials**并记录Access Key ID和Secret Access Key

1. 确认用户有权限在AWS上为Cloud Foundry创建环境.
    * 在该用户的页面选择**Permissions** 选项卡.
    * 点击**Attach Policy**.
    * 选中 **Administrator Access** 旁边的checkbox. 该设置给你的用户提供AWS服务和资源的完全访问.
    * 点击右下角的**Attach Policy**.
<p class="note"><strong>Note:</strong> 为了更安全, 你可以限制IAM用户为使用更细粒度设置的权限, 但是通常来讲Administrator权限就能工作.</p>

1. 创建名为`bosh_environment`的文件, 加入以下内容,
并用符合你的配置的值替换每一行的值, 见以下描述:
    <pre><code>export BOSH\_VPC\_DOMAIN=example.com
    export BOSH\_VPC\_SUBDOMAIN=my-subdomain
    export BOSH\_AWS\_ACCESS\_KEY\_ID=AWS\_ACCESS\_KEY\_ID
    export BOSH\_AWS\_SECRET\_ACCESS\_KEY=AWS\_SECRET\_ACCESS\_KEY
    export BOSH\_AWS\_REGION=us-east-1
    export BOSH\_VPC\_PRIMARY\_AZ=us-east-1a
    export BOSH\_VPC\_SECONDARY\_AZ=us-east-1b
    </code></pre>
    * `BOSH_VPC_DOMAIN`和`BOSH_VPC_SUBDOMAIN`的值必须对应你在<a href="#domain-prep">配置 Route 53</a>时设置的DNS域名. 本例使用`my-subdomain.example.com`.
    * 对于`BOSH_AWS_ACCESS_KEY_ID`和`BOSH_SECRET_ACCESS_KEY`, 使用你在<a href="#generate-credentials">上面创建</a>的密钥对作为 AWS 的访问密钥.
    * 对于`BOSH_AWS_REGION` 属性, 使用你所在的 AWS region. 本例使用`us-east-1`.
    * 对于`BOSH_VPC_PRIMARY_AZ`以及`BOSH_VPC_SECONDARY_AZ`属性,
    选择对你选的region (本例的`us-east-1`), 其[AWS Console](https://console.aws.amazon.com/ec2/v2/home?region=us-east-1)的Health Status部分为"operating normally"的availability zone.
    本例使用`us-east-1a` and `us-east-1b`.

1. 运行`source bosh_environment` 设置AWS bootstrap工具,`bosh aws create`,所需的环境变量.
<pre class="terminal">
    $ source bosh_environment
</pre>

1. 运行`bosh aws create`以创建VPC Internet 网关, VPC 子网,
三个 RDS 数据库, 以及为Cloud Foundry子网路由的NAT虚拟机.
该命令生成两个返回的文件, `aws_rds_receipt.yml` 和
`aws_vpc_receipt.yml`. 这两个文件用于部署Cloud Foundry.

    <pre class="terminal">
    $ bosh aws create
    Executing migration CreateKeyPairs
    allocating 1 KeyPair(s)
    Executing migration CreateVpc

    ...

    details in S3 receipt: aws_rds_receipt and file: aws_rds_receipt.yml
    Executing migration CreateS3
    creating bucket xxxx-bosh-blobstore
    creating bucket xxxx-bosh-artifacts
    </pre>

    <p class="note"><strong>Note</strong>: RDS 数据库建立可能花费20分钟或更长时间.
    </p>

    <p class="note"><strong>Note</strong>: 如果<code>bosh aws create</code> 命令返回错误, 你可以销毁AWS环境. 下节将做介绍.</p>

1. 在AWS **EC2 Dashboard**, 转至 **Elastic IPs**.

1. 点击**Allocate New Address**, 或者选择已经存在但未用在instance中的Elastic IP.

1. 选中IP地址后, 点击**Actions**再选择**Associate Address**, 这会将IP地址于NAT虚拟机联系起来

1. 在**Associate Address**弹出框中, 点击进入**Instance**, 并选择列为`cf_nat_box1`运行的实例.
<%= image_tag("aws_images/AWS-bind-IP-to-NAT.png") %>

## <a id="destroy-environment"></a>销毁AWS环境 ##
你可以使用<code>bosh aws destroy</code>删除所有你的AWS环境中用户创建的structures.
这在`bosh aws create`没有成功结束而你想重启你的环境, 或是在你想因为任何销毁你的AWS环境时用的上.

<pre class="terminal">
$ bosh aws destroy
</pre>
这个命令提示你删除EC2实例, EBS volumes, RDS数据库, S3 bucket, VPCs, 键对, Elastic IPs, security groups以及你账户中的NS/SOA记录

<p class="note warning">
<strong>WARNING: </strong> 命令<code>bosh aws destroy</code>销毁你账户中的所有东西
    包括所有的S3 buckets和所有的实例.
    不要使用这条命令, 除非你想要删除你AWS账户的<strong>所有东西</strong>.
    这包括与Cloud Foundry部署不相关的objects 和文件.
</p>
